DROP TABLE LECTURE_T;
DROP TABLE ENROLL_T;
DROP TABLE COURSE_T;
DROP TABLE STUDENT_T;
DROP TABLE PROFESSOR_T;

-- 교수 테이블
CREATE TABLE PROFESSOR_T (
	PROFESSOR_NO NUMBER NOT NULL,
	PROFESSOR_NAME VARCHAR2(100 BYTE) NOT NULL,
	PROFESSOR_MAJOR VARCHAR2(100 BYTE) NOT NULL,
	CONSTRAINT PK_PROFESSOR PRIMARY KEY(PROFESSOR_NO)
);

-- 학생 테이블
CREATE TABLE STUDENT_T(
    STUDENT_NO NUMBER NOT NULL,
    STUDENT_NAME VARCHAR2(100 BYTE) NOT NULL,
	ADDRESS VARCHAR2(100 BYTE) NOT NULL,
    GRADE NUMBER NOT NULL,
	PROFESSOR_NO NUMBER,
	CONSTRAINT PK_STUDENT PRIMARY KEY(STUDENT_NO),
    CONSTRAINT FK_STUDENT_PROFESSOR FOREIGN KEY(PROFESSOR_NO) REFERENCES PROFESSOR_T(PROFESSOR_NO) ON DELETE SET NULL
);

-- 과목 테이블
CREATE TABLE COURSE_T(
    COURSE_NO NUMBER NOT NULL,
    COURSE_NAME VARCHAR2(100 BYTE) NOT NULL,
	CREDIT NUMBER NOT NULL,
	CONSTRAINT PK_COURSE PRIMARY KEY(COURSE_NO)
);

-- 수강신청 테이블
CREATE TABLE ENROLL_T(
    ENROLL_NO NUMBER NOT NULL,
    -- 학생이 지워지면 수강신청도 지워진다.
    STUDENT_NO NUMBER NOT NULL,
    -- 과목이 지워지면 수강신청에서 과목을 NULL로 설정한다.
    COURSE_NO NUMBER,
	ENROLL_DATE DATE,
	CONSTRAINT PK_ENROLL PRIMARY KEY(ENROLL_NO),
	CONSTRAINT FK_ENROLL_STUDENT FOREIGN KEY(STUDENT_NO) REFERENCES STUDENT_T(STUDENT_NO) ON DELETE CASCADE,
	CONSTRAINT FK_ENROLL_COURSE FOREIGN KEY(COURSE_NO) REFERENCES COURSE_T(COURSE_NO) ON DELETE SET NULL
);

-- 강의 테이블
CREATE TABLE LECTURE_T(
	LECTURE_NO NUMBER NOT NULL,
	PROFESSOR_NO NUMBER,
	ENROLL_NO NUMBER,
	LECTURE_NAME VARCHAR2(100 BYTE) NOT NULL,
	LECTURE_ROOM VARCHAR2(100 BYTE) NOT NULL,
	CONSTRAINT PK_LECTURE PRIMARY KEY(LECTURE_NO),
	CONSTRAINT FK_LECTURE_PROFESSOR FOREIGN KEY(PROFESSOR_NO) REFERENCES PROFESSOR_T(PROFESSOR_NO) ON DELETE SET NULL,
	CONSTRAINT FK_LECTURE_ENROLL FOREIGN KEY(ENROLL_NO) REFERENCES ENROLL_T(ENROLL_NO) ON DELETE CASCADE
);